---
# test
kind: pipeline
name: ci

platform:
  os: linux
  arch: amd64

workspace:
  base: /go
  path: src/github.com/packethost/packet-ccm

steps:
- name: test-build
  image: golang:1.12-alpine
  commands:
  - apk --update add make git
  - make ci
  - make build-all
---
# drone config
kind: pipeline
name: amd64

platform:
  os: linux
  arch: amd64

depends_on:
- ci

workspace:
  base: /go
  path: src/github.com/packethost/packet-ccm

steps:
## git tagged and latest images
- name: build
  image: golang:1.12-alpine
  commands:
  - apk --update add make git
  - make build ARCH=${DRONE_STAGE_ARCH}

- name: publish
  pull: always
  image: plugins/docker
  settings:
    dockerfile: Dockerfile
    password:
      from_secret: docker_password
    repo: packethost/packet-ccm
    build_args:
      ARCH=${DRONE_STAGE_ARCH}
    tags:
    - "${DRONE_COMMIT}-${DRONE_STAGE_ARCH}"
    - latest-${DRONE_STAGE_ARCH}
    username:
      from_secret: docker_username
  when:
    branch:
    - master
    event: push
## release image
- name: release
  pull: always
  image: plugins/docker
  settings:
    dockerfile: Dockerfile
    password:
      from_secret: docker_password
    repo: packethost/packet-ccm
    build_args:
      ARCH=${DRONE_STAGE_ARCH}
    tags:
    - "${DRONE_TAG}-${DRONE_STAGE_ARCH}"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

---
# drone config
kind: pipeline
name: arm64

platform:
  os: linux
  arch: arm64

depends_on:
- ci

workspace:
  base: /go
  path: src/github.com/packethost/packet-ccm

steps:
- name: build
  image: golang:1.12-alpine
  commands:
  - apk --update add make git
  - make build ARCH=${DRONE_STAGE_ARCH}

## git tagged and latest images
- name: publish
  pull: always
  image: plugins/docker
  settings:
    dockerfile: Dockerfile
    password:
      from_secret: docker_password
    repo: packethost/packet-ccm
    build_args:
      ARCH=${DRONE_STAGE_ARCH}
    tags:
    - "${DRONE_COMMIT}-${DRONE_STAGE_ARCH}"
    - latest-${DRONE_STAGE_ARCH}
    username:
      from_secret: docker_username
  when:
    branch:
    - master
    event: push

## release
- name: release
  pull: always
  image: plugins/docker
  settings:
    dockerfile: Dockerfile
    password:
      from_secret: docker_password
    repo: packethost/packet-ccm
    build_args:
      ARCH=${DRONE_STAGE_ARCH}
    tags:
    - "${DRONE_TAG}-${DRONE_STAGE_ARCH}"
    username:
      from_secret: docker_username
  when:
    event:
    - tag
---
# drone config
kind: pipeline
name: manifests

platform:
  os: linux
  arch: amd64

depends_on:
- amd64
- arm64

## manifests
steps:
- name: manifest-commit
  pull: always
  image: plugins/manifest
  settings:
    target: "packethost/packet-ccm:${DRONE_COMMIT}"
    template: "packethost/packet-ccm:${DRONE_COMMIT}-ARCH"
    password:
      from_secret: docker_password
    platforms:
    - linux/amd64
    - linux/arm64
    username:
      from_secret: docker_username
  when:
    branch:
    - master
    event: push

- name: manifest-latest
  pull: always
  image: plugins/manifest
  settings:
    target: packethost/packet-ccm:latest
    template: packethost/packet-ccm:latest-ARCH
    password:
      from_secret: docker_password
    platforms:
    - linux/amd64
    - linux/arm64
    username:
      from_secret: docker_username
  when:
    branch:
    - master
    event: push

## Releases


- name: release-manifest-commit
  pull: always
  image: plugins/manifest
  settings:
    target: "packethost/packet-ccm:${DRONE_TAG}"
    template: "packethost/packet-ccm:${DRONE_TAG}-ARCH"
    password:
      from_secret: docker_password
    platforms:
    - linux/amd64
    - linux/arm64
    username:
      from_secret: docker_username
  when:
    event:
      - tag
